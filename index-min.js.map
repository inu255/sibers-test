{"version":3,"sources":["contacts/contacts.js","header/header.js","popup-edit/popup-edit.js","popup-show/popup-show.js"],"names":["createContactItem","id","currentUser","JSON","parse","localStorage","getItem","listItem","document","createElement","itemName","itemEmail","itemPhone","itemCompany","classList","add","innerHTML","name","email","phone","company","append","querySelector","fetch","then","response","json","length","i","setItem","stringify","j","createPopup","headerInput","addEventListener","filterable","querySelectorAll","style","value","k","newStr","toUpperCase","slice","indexOf","nameInput","emailInput","phoneInput","companyInput","editContacts","event","preventDefault","user","window","location","reload","shownItems","extractedName","extractedEmail","extractedPhone","extractedCompany","setAttribute"],"mappings":"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","sourcesContent":["fetch('http://demo.sibers.com/users') // получаем json  с сервера\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    document.querySelector('#contactsNumber').innerHTML = json.length;\r\n    for (let i = 0; i < json.length; i++) {\r\n      // задаём приоритет у локально изменённых данных контакта\r\n      if (!localStorage.getItem('User' + i)) {\r\n        // записываем данные в localStorage\r\n        localStorage.setItem('User' + i, JSON.stringify(json[i]));\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < localStorage.length; j++) {\r\n      createContactItem(j) // создаём список контактов\r\n    }\r\n  }).then(() => {\r\n    createPopup();\r\n  })\r\n\r\n    function createContactItem(id) {\r\n    let currentUser = JSON.parse(localStorage.getItem('User' + id));\r\n    // создаём будущие элементы списка\r\n    let listItem = document.createElement('div'),\r\n        itemName = document.createElement('div'),\r\n        itemEmail = document.createElement('div'),\r\n        itemPhone = document.createElement('div'),\r\n        itemCompany = document.createElement('div');\r\n    // добавляем им классы для корректной работы стилей\r\n    listItem.classList.add('contacts__item');\r\n    itemName.classList.add('contacts__name', 'contacts__list-item');\r\n    itemEmail.classList.add('contacts__email', 'contacts__list-item');\r\n    itemPhone.classList.add('contacts__phone', 'contacts__list-item');\r\n    itemCompany.classList.add('contacts__company', 'contacts__list-item');\r\n\r\n    // заполняем данными из localStorage\r\n    itemName.innerHTML = currentUser.name;\r\n    itemEmail.innerHTML = currentUser.email;\r\n    itemPhone.innerHTML = currentUser.phone;\r\n    itemCompany.innerHTML = currentUser.company.name;\r\n    itemCompany.innerHTML = currentUser.company.name;\r\n\r\n    // выводим сгенерированные элементы на страницу\r\n    listItem.append(itemName);\r\n    listItem.append(itemEmail);\r\n    listItem.append(itemPhone);\r\n    listItem.append(itemCompany);\r\n\r\n    document.querySelector('#dynamicList').append(listItem);\r\n\r\n  }\r\n","let headerInput = document.querySelector('.header__search');\r\n\r\n// когда пользователь вводит что-то в строку поиска,\r\n// список контактов выстраивается заново\r\nheaderInput.addEventListener('input', () => {\r\n  let filterable = document.querySelectorAll('.contacts__item');\r\n\r\n  for (let i = 0; i < filterable.length; i++) {\r\n    // скрываем все элементы списка, чтобы отом отбразить только отфильтрованные\r\n    filterable[i].style = 'display: none';\r\n  }\r\n    if (headerInput.value === '') {\r\n      for (let k = 0; k <= filterable.length - 1; k++) {\r\n        filterable[k].style = 'display: block'; // отображаем все элементы, если строка поиска пуста\r\n      }\r\n    } else {\r\n      let newStr = headerInput.value[0].toUpperCase() + headerInput.value.slice(1); // то что ввёл пользователь\r\n\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        // введённый в строку поиска текст сравнивается\r\n        // со свойством name соответствующего контакта\r\n        if (JSON.parse(localStorage.getItem('User' + i)).name.indexOf(newStr) === 0) {\r\n          // и, если совпадение есть, элемент этого контакта выводится на страницу\r\n          filterable[i].style = 'display: block';\r\n        }\r\n      }\r\n    }\r\n\r\n})\r\n","let nameInput = document.querySelector('input.popup-edit__name'),\r\n    emailInput = document.querySelector('input.popup-edit__email'),\r\n    phoneInput = document.querySelector('input.popup-edit__phone'),\r\n    companyInput = document.querySelector('input.popup-edit__company');\r\n\r\nfunction editContacts(id) {\r\n  // по нажатию на кнопку save данные о контакте в localStorage изменяются\r\n  document.querySelector('.popup-edit__save').addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    // десерелизуем данные контакта из localStorage\r\n    let user = JSON.parse(localStorage.getItem('User' + id));\r\n\r\n    // меняем свойства на введённые в инпуты\r\n    if (nameInput.value) user.name = nameInput.value[0].toUpperCase() + nameInput.value.slice(1);\r\n    if (emailInput.value) user.email = emailInput.value;\r\n    if (phoneInput.value) user.phone = phoneInput.value;\r\n    if (companyInput.value) user.company.name = companyInput.value;\r\n\r\n    // снова серелизуем и записываем в localStorage\r\n    localStorage.setItem('User' + id, JSON.stringify(user));\r\n    // перезагружаем страницу, чтобы заново сформировать список контактов с уже изменёнными данными\r\n    window.location.reload();\r\n  })\r\n}\r\n\r\n// прослушивается скрытие попапов\r\ndocument.querySelector('.popup-edit__hide').addEventListener('click', (event) => {\r\n  document.querySelector('.popup-overlay').style = 'display: none';\r\n  document.querySelector('.popup-edit').style = 'display: none';\r\n  document.querySelector('.popup-show').style = 'display: none';\r\n})\r\n\r\n// прослушивается скрытие попапов\r\ndocument.querySelector('.popup-edit__cancel').addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  document.querySelector('.popup-edit').style = 'display: none';\r\n  document.querySelector('.popup-show').style = 'display: block';\r\n})\r\n","function createPopup() {\r\n  let shownItems = document.querySelectorAll('#dynamicList > *');\r\n\r\n  for (let i = 0; i < shownItems.length; i++) {\r\n    // отслеживаем клик по определённому элементу списка контактов\r\n    shownItems[i].addEventListener('click', function(event) {\r\n      // отображаем попап с данными\r\n      document.querySelector('.popup-overlay').style = 'display: block';\r\n      document.querySelector('.popup-show').style = 'display: block';\r\n\r\n      let extractedName = JSON.parse(localStorage.getItem('User' + i)).name,\r\n          extractedEmail = JSON.parse(localStorage.getItem('User' + i)).email,\r\n          extractedPhone = JSON.parse(localStorage.getItem('User' + i)).phone,\r\n          extractedCompany = JSON.parse(localStorage.getItem('User' + i)).company.name;\r\n\r\n      // вставляем данные о контакте в попап\r\n      document.querySelector('.popup-show__name').innerHTML = extractedName;\r\n      document.querySelector('#email').innerHTML = extractedEmail;\r\n      document.querySelector('#email').setAttribute('href', 'mailto:' + extractedEmail);\r\n      document.querySelector('#phone').innerHTML = extractedPhone;\r\n      document.querySelector('#phone').setAttribute('href', 'tel:' + extractedPhone);\r\n      document.querySelector('#company').innerHTML = extractedCompany;\r\n\r\n      // в value интпутов второго попапа подаются текущие данные о контакте\r\n      nameInput.value = extractedName;\r\n      emailInput.value = extractedEmail;\r\n      phoneInput.value = extractedPhone;\r\n      companyInput.value = extractedCompany;\r\n\r\n      // прослушивается скрытие попапов\r\n      document.querySelector('.popup-show__edit').addEventListener('click', (event) => {\r\n        document.querySelector('.popup-show').style = 'display: none';\r\n        document.querySelector('.popup-edit').style = 'display: block';\r\n        editContacts(i);\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// прослушивается скрытие попапов\r\ndocument.querySelector('.popup-show__hide').addEventListener('click', (event) => {\r\n  document.querySelector('.popup-overlay').style = 'display: none';\r\n  document.querySelector('.popup-show').style = 'display: none';\r\n  document.querySelector('.popup-edit').style = 'display: none';\r\n})\r\n\r\n// прослушивается скрытие попапов\r\ndocument.querySelector('.popup-overlay').addEventListener('click', (event) => {\r\n  document.querySelector('.popup-overlay').style = 'display: none';\r\n  document.querySelector('.popup-edit').style = 'display: none';\r\n  document.querySelector('.popup-show').style = 'display: none';\r\n})\r\n"],"file":"index-min.js"}